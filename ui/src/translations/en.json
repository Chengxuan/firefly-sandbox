{
  "$acme": "$ACME",
  "acme": "ACME",
  "address": "Address",
  "amount": "Amount",
  "apiID": "API ID",
  "apiResponse": "API Response",
  "apis": "APIs",
  "apisKnownToFirefly": "APIs Known to FireFly",
  "appCodeInstructions": "Build an action using the panels on the left. Click \"Run\" to execute the action via the backend server. FireFly events related to the transaction will appear on the right.",
  "applicationCode": "Application Code",
  "back": "Back",
  "backToStepOne": "Back to Step 1",
  "balances": "Balances",
  "balancesFor": "Balances for",
  "batchMessages": "Batch Messages",
  "blockchainEventID": "Blockchain Event ID",
  "blockchainEventReceived": "Blockchain Event Received",
  "broadcast": "Broadcast",
  "broadcastShortInfo": "Sends a message visible to all parties in the network",
  "broadcastTitle": "Send a Broadcast Message",
  "burn": "Burn",
  "burnShortInfo": "Destroy a token in a token pool",
  "burnTitle": "Burn a Token",
  "burnWithData": "Burn with Data",
  "code": "Code",
  "compileSmartContract": "Compile your smart contract",
  "connect": "Connect",
  "connected": "Connected",
  "connectedToFirefly": "Listening for events from backend",
  "connector": "Connector",
  "continue": "Continue",
  "contractAddress": "Contract Address",
  "contractAddressHelperText": "The contract address on your blockchain.",
  "contractApi": "Contract API",
  "contractApiConfirmed": "Contract API Confirmed",
  "contractDeployedToFirefly": "Your contract is now deployed to FireFly!",
  "contractInterface": "Contract Interface",
  "contractInterfaceConfirmed": "Contract Interface Confirmed",
  "contractInterfaceTitle": "Define a Contract Interface",
  "contracts": "Contracts",
  "copyCode": "Copy Code",
  "createDatatypeInfo": "Datatypes are broadcast to the network so everybody refers to the same JSON schema when validating their data",
  "createDatatypeTitle": "Define a Datatype",
  "dashboard": "Dashboard",
  "datatypeConfirmed": "Datatype Confirmed",
  "datatypeID": "Datatype ID",
  "datatypes": "Datatypes",
  "datatypeSchemaHelperText": "A JSON schema that parties will validate data against.",
  "datatypeShortInfo": "Datatypes are broadcasts to the network so everybody refers to the same JSON schema when validating their data",
  "datatypeTitle": "Send a Broadcast Message",
  "defineContractInterfaceInfo": "Upload the interface of your contract, describing all its methods and events, in either FFI or Solidity JSON ABI format",
  "deployCompiledContract": "Deploy your compiled contract",
  "deployContractInfo": "Compile and deploy a contract to your blockchain",
  "deployContractTitle": "Deploy a Contract",
  "disconnect": "Disconnect",
  "disconnected": "Disconnected",
  "docs": "Docs",
  "durable": "Durable",
  "ephemeral": "Ephemeral",
  "events": "Events",
  "eventsSubmittedWillShowHere": "Events submitted to FireFly will show here.",
  "eventSubscription": "Event Subscription",
  "exampleAddress": "ex. 0x123....789",
  "exampleAmount": "ex. 10",
  "exampleFromAddress": "ex. 0x987....321",
  "exampleTag": "ex. new_widget",
  "exampleTopic": "ex. widget_123",
  "ffi": "FFI",
  "filterEventSubscriptions": "Filter Event Subscriptions (Optional)",
  "finish": "Finish",
  "fireflyCurrentState": "FireFly's Current State",
  "followStepsInInstructions": "Follow steps outlined in the instructions",
  "fromAddress": "From Address",
  "fungible": "Fungible",
  "home": "Home",
  "identityConfirmed": "Identity Confirmed",
  "identityUpdated": "Identity Updated",
  "installSolc": "Install the Solidity Compiler",
  "interfaceFormat": "Interface Format",
  "interfaceID": "Interface ID",
  "listener": "Listener",
  "message": "Message",
  "messageConfirmed": "Message Confirmed",
  "messageID": "Message ID",
  "messageRejected": "Message Rejected",
  "messages": "Messages",
  "messageType": "Message Type",
  "messagingMethod": "Messaging Method",
  "mint": "Mint",
  "mintShortInfo": "Generate a new token in a token pool",
  "mintTitle": "Mint a Token",
  "mintWithData": "Mint with Data",
  "name": "Name",
  "namespaceConfirmed": "Namespace Confirmed",
  "noAPIsRegisteredWithFireFly": "No APIs Registered with FireFly",
  "noBalancesForWallet": "No Balances for Wallet",
  "noConnectors": "No Token Connectors",
  "noDatatypes": "No Datatypes",
  "nonfungible": "Non-Fungible",
  "notConnected": "Not Connected",
  "notConnectedToFirefly": "Not listening for events from backend",
  "noTokenPools": "No Token Pools",
  "nullAddress": "0x0000000000000000000000000000000000000000",
  "operationErrorID": "Operation Error ID",
  "payload": "Payload",
  "poolID": "Pool ID",
  "poolName": "Pool Name",
  "poolShortInfo": "Token pools are a FireFly construct for describing a set of tokens",
  "poolSymbol": "Pool Symbol",
  "poolTitle": "Create a Token Pool",
  "postSentTo": "POST Sent to ",
  "private": "Private",
  "privateShortInfo": "Sends a message to a restricted set of parties",
  "privateTitle": "Send a Private Message",
  "protocolID": "Protocol ID",
  "recipients": "Recipients",
  "recipientsHelperText": "A restricted set of parties to send the message to.",
  "referenceID": "Reference ID",
  "refreshConnection": "Refresh Connection",
  "registerApiListenerTitle": "Register a Contract Listener",
  "registerContractApiInfo": "Generate an interactive HTTP API from your contract, complete with an OpenAPI definition and Swagger UI",
  "registerContractApiListenerInfo": "Instruct FireFly to begin listening to and indexing events from your contract",
  "registerContractApiTitle": "Register a Contract API",
  "run": "Run",
  "schema": "Schema",
  "serverCode": "Server Code",
  "serverCodeInfo": "Build an action using the panels on the left. When you press run, the backend Node.js server will execute a code snippet similar to below.",
  "serverResponse": "Server Response",
  "specifyDatatype": "Specify Datatype",
  "standard": "Standard",
  "subscribe": "Subscribe",
  "subscription": "Subscription",
  "symbol": "Symbol",
  "tag": "Tag",
  "tagHelperText": "The reason for the broadcast. An application specific type for the message.",
  "toAddress": "To Address",
  "tokenApprovalConfirmed": "Token Approval Confirmed",
  "tokenApprovalOpFailed": "Token Approval Operation Failed",
  "tokenBalance": "Token Balance",
  "tokenIndex": "Token Index",
  "tokenIndexes": "Token Indexes",
  "tokenPool": "Token Pool",
  "tokenPoolAddressHelperText": "The address of the token contract that you want FireFly to index.",
  "tokenPoolConfirmed": "Token Pool Confirmed",
  "tokenPoolRecipientHelperText": "The account to transfer the token(s) to.",
  "tokenRecipient": "Token Recipient",
  "tokens": "Tokens",
  "tokenTransferConfirmed": "Token Transfer Confirmed",
  "tokenTransferFailed": "Token Transfer Failed",
  "topic": "Topic",
  "topicHelperText": "A well known identifier that relates to the information you are publishing.",
  "total": "Total",
  "transactionID": "Transaction ID",
  "transactionSubmitted": "Transaction Submitted",
  "transfer": "Transfer",
  "transferID": "Transfer ID",
  "transferShortInfo": "Transfer tokens from one address to another",
  "transferTitle": "Transfer Tokens",
  "transferType": "Transfer Type",
  "transferWithData": "Transfer with Data",
  "type": "Type",
  "typescriptSDK": "Typescript SDK",
  "uploadFile": "Upload File",
  "version": "Version",
  "waitingForTxEventsToFinish": "Waiting for events to finish"
}
